/**
 * FluxNotes Treatment Options Rest Client
 * FluxNotes Treatment Options Rest Client
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient', '../model/TreatmentOptions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/TreatmentOptions'));
  } else {
    // Browser globals (root is window)
    if (!root.FluxNotesTreatmentOptionsRestClient) {
      root.FluxNotesTreatmentOptionsRestClient = {};
    }
    root.FluxNotesTreatmentOptionsRestClient.DefaultApi = factory(root.FluxNotesTreatmentOptionsRestClient.ApiClient, root.FluxNotesTreatmentOptionsRestClient.TreatmentOptions);
  }
}(this, function(ApiClient, TreatmentOptions) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 1.0.0
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the findTreatmentOptionsByPatientStats operation.
     * @callback module:api/DefaultApi~findTreatmentOptionsByPatientStatsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TreatmentOptions>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get treatment options given filters
     * Return treatment options for the following filters
     * @param {String} disease disease filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.race race filter
     * @param {String} opts.dxGrade grade of disease filter
     * @param {module:api/DefaultApi~findTreatmentOptionsByPatientStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TreatmentOptions>}
     */
    this.findTreatmentOptionsByPatientStats = function(disease, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'disease' is set
      if (disease === undefined || disease === null) {
        throw new Error("Missing the required parameter 'disease' when calling findTreatmentOptionsByPatientStats");
      }


      var pathParams = {
      };
      var queryParams = {
        'Disease': disease,
        'Race': opts['race'],
        'dxGrade': opts['dxGrade'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/xml', 'application/json'];
      var returnType = [TreatmentOptions];

      
      // return this.apiClient.callApi(
      //   '/treatmentOptions', 'GET',
      //   pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
      //   authNames, contentTypes, accepts, returnType, callback
      // );
      

      
      var url = encodeURI('http://localhost:3001/api/treatmentOptions?' + 'Disease='+ queryParams.Disease + '&Race=' +queryParams.Race + '&dxGrade=' + queryParams.dxGrade);
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.open("GET", url, false);
      xmlHttp.send(null);
      return xmlHttp.responseText;

    }

    /**
     * Callback function to receive the result of the treatmentOptionsOptions operation.
     * @callback module:api/DefaultApi~treatmentOptionsOptionsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/DefaultApi~treatmentOptionsOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.treatmentOptionsOptions = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/treatmentOptions', 'OPTIONS',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
